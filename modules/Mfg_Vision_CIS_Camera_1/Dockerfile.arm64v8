# FROM mcr.microsoft.com/azureml/onnxruntime-1.6-ubuntu18.04-py37-cpu-inference:latest
FROM aiotdevopsacr.azurecr.io/onnxruntime_jp451:1.8.0.2-arm64v8

COPY qemu-aarch64-static /usr/bin/qemu-aarch64-static
RUN cd /usr/bin && chmod a+rwx qemu-aarch64-static
RUN apt install -y libomp-dev

ARG DEBIAN_FRONTEND=noninteractive
# Create folder structure and set permissions
# When combined with deployment manifest, an edge_assets directory will be created on the host device
RUN mkdir /model_volume && chmod -R 777 /model_volume
RUN mkdir /images_volume && chmod -R 777 /images_volume
RUN mkdir /image_sink_volume && chmod -R 777 /image_sink_volume
RUN mkdir /config && chmod -R 777 /config

WORKDIR /app

RUN apt-get update

# Comment out if not using ACV->ONNX
RUN apt install -y --no-install-recommends \
    libprotobuf-dev protobuf-compiler 


# Comment out if not using Allied Vision camera
COPY VimbaSDK/Vimba_v5.1_ARM64.tgz /opt
RUN cd /opt && tar -zxvf Vimba_v5.1_ARM64.tgz && rm -rf *.tgz
RUN cd /opt/Vimba_5_1/VimbaGigETL && ./Install.sh
ENV GENICAM_GENTL64_PATH="/opt/Vimba_5_1/VimbaGigETL/CTI/arm_64bit"
RUN echo "$GENICAM_GENTL64_PATH"
RUN cd /opt/Vimba_5_1/Tools/Viewer/Bin/arm_64bit && chmod +x libVimbaC.so && chown root:root libVimbaC.so 
RUN cp /opt/Vimba_5_1/Tools/Viewer/Bin/arm_64bit/libVimbaC.so /usr/lib/aarch64-linux-gnu

# ONNX & ONNX runtime, OpenCV foundational packages
RUN python3 -m pip install --upgrade pip wheel setuptools
RUN python3 -m pip install cython numpy>=1.19.0 pillow 
RUN python3 -m pip install opencv-contrib-python-headless
RUN python3 -m pip install azure-iot-device~=2.7.0 influxdb-client

# Comment out if not using ACV->ONNX
RUN apt-get install -y --no-install-recommends \
    cmake
RUN python3 -m pip install onnx>=1.8.1 

# Comment out if not using YOLOv5->ONNX
RUN python3 -m pip install torch torchvision
RUN python3 -m pip install pandas tqdm PyYAML
RUN python3 -m pip install scipy seaborn requests
RUN python3 -m pip install pybind11 pytest protobuf
RUN python3 -m pip install objdict

# Comment out if not using Basler
RUN python3 -m pip install pypylon

# Cleanup
RUN rm -rf /var/lib/apt/lists/* \
    && apt-get -y autoremove

# Comment out if not using Allied Vision camera
#Pulled from https://stackoverflow.com/questions/55313610/importerror-libgl-so-1-cannot-open-shared-object-file-no-such-file-or-directo
RUN apt-get clean
RUN apt-get update
RUN apt-get install ffmpeg libsm6 libxext6  -y
# /////////////////////////////////////////

COPY /app/ .

# for mlocate update
RUN updatedb

ENV PATH=/usr/lib/aarch64-linux-gnu/:$PATH
ENV LD_LIBRARY_PATH=/usr/lib/aarch64-linux-gnu:$LD_LIBRARY_PATH
RUN ldconfig

CMD [ "python3", "-u", "./main.py" ]
